<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Edu+NSW+ACT+Cursive:wght@400..700&display=swap" rel="stylesheet">
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>RHAC Values Matching Game</title>
<style>
body {
  margin: 0;
  font-family: Arial, sans-serif;
}

#startScreen {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background: url("xavxlyslys.JPG") no-repeat center center fixed;
  background-size: 100% 150%
}

#startButton {
    font-weight: bold;
  text-align: center;
  width: 100px; height: 50px;
  background: transparent;
  color: rgb(9, 7, 124);
  border: none;
  font-size: 40px;
  border-radius: 12px;
  position: relative;
  top: 375px;
  left: 20px;
  cursor: pointer;


}

#gameContainer {
  display: none;
  flex-direction: column;
  align-items: center;
  height: 100vh;
  padding: 20px;
  background: url("830E4F9D-82B7-47C8-9E6B-3D24FA7DA741.jpeg") no-repeat center center fixed;
  background-size:contain;
}

#message{
    align-items: center;
    text-align: top;
}
#message {
  font-size: 20px;
  margin-bottom: 20px;
  min-height: 60px;
  text-align: center;
  color: black;
  background: rgba(255,255,255,0.9);
  padding: 10px 15px;
  border-radius: 8px;
  transition: transform 0.3s ease, opacity 0.3s ease;
}
.pop {
  transform: scale(1.2);
  opacity: 1;
}

#game {
  display: grid;
  grid-template-columns: repeat(4, 100px);
  grid-gap: 15px;
}

.card {
  width: 100px;
  height: 100px;
  background: white;
  border-radius: 12px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  font-size: 16px; /* default word size */
  color: black;
  text-align: center;
  padding: 5px;
  transition: background 0.3s, transform 0.3s;
}
.card.emoji {
  font-size: 40px; /* bigger emoji */
}
#perseverance {
  font-size: 17px;
}
.card.selected {
  background: #ccc;
}
.card.matched {
  background: #2ecc71;
  color: white;
  pointer-events: none;
  transform: scale(0);
  transition: transform 0.5s ease;
}

#win {
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(255,255,255,0.95);
  color: black;
  font-size: 24px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.8s;
  text-align: center;
  padding: 20px;
}
#win.show {
  opacity: 1;
  pointer-events: all;
}

#iconLayout {
  position: relative;
  width: 300px;
  height: 300px;
  margin: auto;
}
#iconLayout img {
  max-width: 120px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
#iconLayout .circle-emoji {
  position: absolute;
  font-size: 48px;
  transform: translate(-50%, -50%);
}
#iconLayout .text {
  position: absolute;
  bottom: 30px;
  left: calc(50% - 50px);
  transform: translateX(-50%);
  text-align: center;
  z-index: 2;
}
</style>
</head>
<body>

<div id="startScreen">
  <button id="startButton">Start</button>
</div>

<div id="gameContainer">
  <div id="message">Match the values to their emojis!</div>
  <div id="game"></div>

  <!-- Final screen -->
  <div id="win">
      <p>Thank you for meeting with me.</p>
      <p>These icons represent RHAC‚Äôs values</p>
      <p>that inspire me to learn and grow.</p>
    <div id="iconLayout">
      <img src="a faliure management.png" alt="RHAC Logo">
      <div class="circle-emoji" style="top:0%; left:50%;">ü§ù</div>
      <div class="circle-emoji" style="top:20%; left:85%;">üïäÔ∏è</div>
      <div class="circle-emoji" style="top:50%; left:100%;">üå±</div>
      <div class="circle-emoji" style="top:80%; left:85%;">üíñ</div>
      <div class="circle-emoji" style="top:100%; left:50%;">ü´Ç</div>
      <div class="circle-emoji" style="top:80%; left:15%;">üí™</div>
      <div class="circle-emoji" style="top:50%; left:0%;">üèÉ‚Äç‚ôÇÔ∏è</div>
      <div class="circle-emoji" style="top:20%; left:15%;">‚≠ê</div>
    </div>
  </div>
</div>

<audio id="popSound" src="sound1.mp3"></audio>
<audio id="finalSound" src="sound2.mp3"></audio>

<script>
const startButton = document.getElementById("startButton");
const startScreen = document.getElementById("startScreen");
const gameContainer = document.getElementById("gameContainer");

startButton.addEventListener("click", () => {
  startScreen.style.display = "none";
  gameContainer.style.display = "flex";
});

const game = document.getElementById("game");
const win = document.getElementById("win");
const message = document.getElementById("message");

const popSound = document.getElementById("popSound");
const finalSound = document.getElementById("finalSound");

const pairs = [
  { word: "Respect", emoji: "ü§ù", yap: "Respect is about valuing others." },
  { word: "Integrity", emoji: "üïäÔ∏è", yap: "Integrity means being honest and fair." },
  { word: "Humility", emoji: "üå±", yap: "Humility is growing without boasting." },
  { word: "Kindness", emoji: "üíñ", yap: "Kindness is showing love and care." },
  { word: "Compassion", emoji: "ü´Ç", yap: "Compassion is helping those in need." },
  { word: "Resilience", emoji: "üí™", yap: "Resilience is bouncing back strong." },
  { word: "Perseverance", emoji: "üèÉ‚Äç‚ôÇÔ∏è", yap: "Perseverance is never giving up." }
];

let cardsArray = [];
pairs.forEach(p => {
  if(p.word === "Perseverance"){
    cardsArray.push({type:"word", value:p.word, yap:p.yap, id:"perseverance"});
  } else {
    cardsArray.push({type:"word", value:p.word, yap:p.yap});
  }
  cardsArray.push({type:"emoji", value:p.emoji, yap:p.yap});
});
cardsArray.sort(() => Math.random() - 0.5);

let selected = [];
let matchedCount = 0;

// Build grid
cardsArray.forEach(item => {
  const card = document.createElement("div");
  card.classList.add("card");
  card.textContent = item.value;
  card.dataset.value = item.value;
  card.dataset.type = item.type;
  card.dataset.yap = item.yap;
  if(item.id) card.id = item.id;
  if(item.type === "emoji") card.classList.add("emoji");
  card.addEventListener("click", () => selectCard(card));
  game.appendChild(card);
});

function selectCard(card){
  if(card.classList.contains("matched") || card.classList.contains("selected")) return;

  card.classList.add("selected");
  selected.push(card);

  if(selected.length === 2){
    const [c1, c2] = selected;
    const isPair = pairs.some(p => 
      (c1.dataset.value === p.word && c2.dataset.value === p.emoji) ||
      (c1.dataset.value === p.emoji && c2.dataset.value === p.word)
    );

    if(isPair){
      c1.classList.remove("selected"); c2.classList.remove("selected");
      c1.classList.add("matched"); c2.classList.add("matched");
      matchedCount += 2;

      message.textContent = c1.dataset.yap;
      message.classList.add("pop");
      setTimeout(()=> message.classList.remove("pop"), 400);

      popSound.currentTime = 0;
      popSound.play();

      if(matchedCount === cardsArray.length){
        setTimeout(()=>{
          win.classList.add("show");
          finalSound.play();
        },500);
      }
    } else {
      setTimeout(()=>{
        c1.classList.remove("selected");
        c2.classList.remove("selected");
      },600);
    }
    selected = [];
  }
}
</script>

</body>
</html>
